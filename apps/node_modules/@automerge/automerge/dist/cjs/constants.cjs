"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// mjs/constants.js
var constants_exports = {};
__export(constants_exports, {
  CLEAR_CACHE: () => CLEAR_CACHE,
  COUNTER: () => COUNTER,
  F64: () => F64,
  INT: () => INT,
  IS_PROXY: () => IS_PROXY,
  OBJECT_ID: () => OBJECT_ID,
  STATE: () => STATE,
  TEXT: () => TEXT,
  TRACE: () => TRACE,
  UINT: () => UINT
});
module.exports = __toCommonJS(constants_exports);
var STATE = Symbol.for("_am_meta");
var TRACE = Symbol.for("_am_trace");
var OBJECT_ID = Symbol.for("_am_objectId");
var IS_PROXY = Symbol.for("_am_isProxy");
var CLEAR_CACHE = Symbol.for("_am_clearCache");
var UINT = Symbol.for("_am_uint");
var INT = Symbol.for("_am_int");
var F64 = Symbol.for("_am_f64");
var COUNTER = Symbol.for("_am_counter");
var TEXT = Symbol.for("_am_text");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CLEAR_CACHE,
  COUNTER,
  F64,
  INT,
  IS_PROXY,
  OBJECT_ID,
  STATE,
  TEXT,
  TRACE,
  UINT
});
